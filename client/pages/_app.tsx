import '../styles/globals.scss';
import type { AppInitialProps, AppProps } from 'next/app';
import 'macro-css';
import { CssBaseline, ThemeProvider } from '@mui/material';
import { theme } from '../theme';
import Head from 'next/head';
import { Provider } from 'react-redux';
import { wrapper } from '../app/store';
import { setUserData } from '../features/user/slice';
import { UserApi } from '../utils/api';
import { parseCookies } from 'nookies';

function MyApp({ Component, ...rest }: AppProps) {
  const { store, props } = wrapper.useWrappedStore(rest);

  return (
    <>
      <Head>
        <title>RJournal</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider theme={theme}>
        <CssBaseline />
        <Provider store={store}>
          <Component {...props.pageProps} />
        </Provider>
      </ThemeProvider>
    </>
  );
}

MyApp.getInitialProps = wrapper.getInitialAppProps((store) => async ({ ctx, Component }) => {
  try {
    const { rj_token } = parseCookies(ctx);

    const userData = await UserApi.getProfileData(rj_token);

    store.dispatch(setUserData(userData));
  } catch (error) {
    console.log(error);
  }

  return {
    pageProps: Component.getInitialProps ? await Component.getInitialProps({ ...ctx, store }) : {},
  };
});

export default MyApp;
